name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Install Playwright browsers
      run: |
        playwright install
    
    - name: Format check with black
      run: |
        black --check src tests
    
    - name: Lint with flake8
      run: |
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        mypy src --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests -v --cov=src --cov-report=term-missing
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 24.x
      uses: actions/setup-node@v4
      with:
        node-version: "24.x"
    
    - name: Enable Corepack
      run: corepack enable
    
    - name: Cache yarn packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.yarn/cache
          frontend/.yarn/cache
          frontend/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('frontend/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Lint
      working-directory: ./frontend
      run: yarn lint
    
    - name: Type check
      working-directory: ./frontend
      run: yarn build
    
    - name: Format check
      working-directory: ./frontend
      run: yarn format:check
