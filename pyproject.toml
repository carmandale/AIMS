[project]
name = "aims-backend"
version = "0.1.0"
description = "Automated Investment Management System - Backend"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "Private" }
authors = [
    { name = "AIMS Development Team" }
]
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.1",
    "apscheduler>=3.10.4",
    "sqlalchemy>=2.0.31",
    "alembic>=1.13.1",
    "pydantic>=2.8.2",
    "pydantic-settings>=2.3.4",
    "python-dotenv>=1.0.1",
    "weasyprint>=62.3",
    "python-multipart>=0.0.9",
    "websockets>=12.0",
    "aioredis>=2.0.1",
    "slowapi>=0.1.9",
    "httpx>=0.27.0",
    "yfinance>=0.2.40",
    "ccxt>=4.3.24",
    "pytz>=2024.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.7",
    "pytest-cov>=5.0.0",
    "black>=24.4.2",
    "ruff>=0.5.0",
    "mypy>=1.10.1",
    "isort>=5.13.2",
    "types-python-dateutil>=2.9.0.20240316",
    "types-pytz>=2024.1.0.20240203",
]

[tool.uv]
dev-dependencies = [
    "ipython>=8.24.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "rich>=13.7.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = ["E501", "B008", "C901", "W191"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = false
no_implicit_optional = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.isort]
profile = "black"
line_length = 100
