# AIMS Production Environment Configuration Template
# 
# IMPORTANT: This file contains sensitive configuration for production use.
# 1. Copy this file to .env for production deployment
# 2. Replace ALL placeholder values with actual production values
# 3. NEVER commit the actual .env file with real credentials to version control
# 4. Ensure proper file permissions (chmod 600 .env)
# 
# For local development, use .env.example instead

# ==============================================================================
# API CONFIGURATION
# ==============================================================================

# API host - Use 0.0.0.0 to listen on all interfaces
# For containerized deployments, typically use 0.0.0.0
API_HOST=0.0.0.0

# API port - Change if running behind a reverse proxy
API_PORT=8000

# IMPORTANT: Disable auto-reload in production
API_RELOAD=false

# ==============================================================================
# SECURITY - CRITICAL SETTINGS
# ==============================================================================

# SECRET KEY - MUST BE CHANGED FOR PRODUCTION
# Generate a secure secret key:
# python -c "import secrets; print(secrets.token_urlsafe(64))"
SECRET_KEY=CHANGE-THIS-USE-A-SECURE-RANDOM-KEY-AT-LEAST-64-CHARACTERS

# CORS Origins - Update with your actual production domains
# Format: JSON array of allowed origins
# Example: ["https://app.yourdomain.com", "https://api.yourdomain.com"]
CORS_ORIGINS=["https://your-production-domain.com"]

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# PostgreSQL is recommended for production
# Format: postgresql://username:password@host:port/database
# 
# Example configurations:
# - Local PostgreSQL: postgresql://aims_user:secure_password@localhost:5432/aims_production
# - AWS RDS: postgresql://username:password@your-db-instance.region.rds.amazonaws.com:5432/aims_prod
# - Docker PostgreSQL: postgresql://aims_user:password@postgres:5432/aims_db
#
# IMPORTANT: Use SSL for remote database connections
DATABASE_URL=postgresql://aims_user:CHANGE_THIS_PASSWORD@your-database-host:5432/aims_production?sslmode=require

# ==============================================================================
# SNAPTRADE CONFIGURATION - PRODUCTION CREDENTIALS
# ==============================================================================

# PRODUCTION SnapTrade credentials from https://dashboard.snaptrade.com
# These are different from sandbox credentials
SNAPTRADE_CLIENT_ID=YOUR-PRODUCTION-CLIENT-ID
SNAPTRADE_CONSUMER_KEY=YOUR-PRODUCTION-CONSUMER-KEY

# IMPORTANT: Set to "production" for real trading
# This enables real money transactions - use with extreme caution
SNAPTRADE_ENVIRONMENT=production

# ==============================================================================
# LOGGING AND MONITORING
# ==============================================================================

# Log level for production (INFO or WARNING recommended)
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Optional: External logging service
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# LOGSTASH_HOST=your-logstash-host
# LOGSTASH_PORT=5000

# ==============================================================================
# PERFORMANCE AND SCALING
# ==============================================================================

# Number of worker processes (for Gunicorn/Uvicorn)
# Recommended: 2 * CPU cores + 1
# WEB_CONCURRENCY=5

# Connection pool size for database
# DB_POOL_SIZE=20
# DB_MAX_OVERFLOW=40

# Redis configuration (if using for caching/sessions)
# REDIS_URL=redis://username:password@your-redis-host:6379/0

# ==============================================================================
# TIMEZONE AND LOCALIZATION
# ==============================================================================

# Timezone for scheduled tasks and reporting
# Use standard timezone names from: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TIMEZONE=America/New_York

# ==============================================================================
# EMAIL CONFIGURATION (Optional)
# ==============================================================================

# SMTP settings for sending emails (alerts, reports, etc.)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-specific-password
# SMTP_USE_TLS=true
# EMAIL_FROM=AIMS Notifications <noreply@yourdomain.com>

# ==============================================================================
# BACKUP AND RECOVERY (Optional)
# ==============================================================================

# S3 bucket for backups
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_S3_BUCKET=aims-backups
# AWS_REGION=us-east-1

# ==============================================================================
# FEATURE FLAGS (Optional)
# ==============================================================================

# Enable/disable specific features
# ENABLE_PAPER_TRADING=false
# ENABLE_REAL_TRADING=true
# ENABLE_AUTO_REBALANCING=true
# MAINTENANCE_MODE=false

# ==============================================================================
# RATE LIMITING (Optional)
# ==============================================================================

# API rate limiting
# RATE_LIMIT_ENABLED=true
# RATE_LIMIT_PER_MINUTE=60
# RATE_LIMIT_PER_HOUR=1000

# ==============================================================================
# MONITORING AND HEALTH CHECKS
# ==============================================================================

# Health check token (for authenticated health checks)
# HEALTH_CHECK_TOKEN=your-secret-health-check-token

# Webhook for alerts
# ALERT_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# ==============================================================================
# DEPLOYMENT SPECIFIC
# ==============================================================================

# Environment name (for logging and monitoring)
# ENVIRONMENT=production

# Application URL (for generating absolute URLs)
# APP_URL=https://aims.yourdomain.com

# CDN URL (if using CDN for static assets)
# CDN_URL=https://cdn.yourdomain.com

# ==============================================================================
# IMPORTANT REMINDERS
# ==============================================================================
# 
# 1. Generate a new SECRET_KEY - NEVER use the default
# 2. Use strong passwords for database connections
# 3. Ensure SNAPTRADE_ENVIRONMENT is set to "production"
# 4. Update CORS_ORIGINS with your actual domains
# 5. Use SSL/TLS for all external connections
# 6. Set up proper logging and monitoring
# 7. Configure backups for your database
# 8. Test thoroughly in a staging environment first
# 9. Use environment-specific configuration management (e.g., AWS Secrets Manager)
# 10. Monitor API usage and rate limits with SnapTrade
#
# SECURITY CHECKLIST:
# [ ] Changed SECRET_KEY
# [ ] Updated database password
# [ ] Set production SnapTrade credentials
# [ ] Configured CORS origins
# [ ] Enabled SSL for database
# [ ] Set up logging
# [ ] Configured backups
# [ ] Reviewed all settings
#
# ==============================================================================