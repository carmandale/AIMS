{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(cd:*)",
      "Bash(npm install:*)",
      "Bash(bun install:*)",
      "Bash(bun:*)",
      "WebFetch(domain:localhost)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(yarn dev)",
      "Bash(cp:*)",
      "Bash(yarn add:*)",
      "Bash(yarn test-api:*)",
      "Bash(python:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(gh issue view:*)",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(./schedule_with_note.sh:*)",
      "Bash(./send-claude-message.sh:*)",
      "Bash(./send-claude-message.sh:*)",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"STATUS: 1) Issue analyzed: YES 2) Project structure understood: YES 3) Ready to begin implementation: YES\")",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:1 \"PM BRIEFING: Issue #52 - Local Dev Setup\nSTATUS: Ready to implement 6 deliverables\nPRIORITY ORDER:\n1. Database init script (IN PROGRESS per status)\n2. Setup verification script\n3. Local dev setup guide\n4. Production env config\n5. SnapTrade prod guide\n6. Startup scripts\nAPPROACH: Following LEARNINGS.md - doc before code, 30min commits, verify each step\")",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(rm:*)",
      "Bash(uv run:*)",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"PROGRESS UPDATE: Task 3 (Database Initialization Script) COMPLETED. Created scripts/init_db.py with: 1) Table creation/recreation 2) Development data seeding 3) Database verification 4) Migration support stub. Script tested and working. Moving to Task 4 (Setup Verification Script).\")",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"PROGRESS UPDATE: Task 4 (Setup Verification Script) COMPLETED. Created scripts/verify_setup.py with comprehensive checks for: 1) System requirements 2) Environment config 3) Dependencies 4) Database 5) API endpoints 6) Frontend 7) SnapTrade config. Script tested and working with --skip-backend option. 2 of 6 tasks now complete.\")",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"PROGRESS UPDATE: Task 1 (Local Development Setup Guide) COMPLETED. Created comprehensive docs/local-setup.md with: 1) Prerequisites & quick start 2) Detailed setup instructions 3) Environment configuration 4) Database setup 5) Running instructions 6) Verification steps 7) Troubleshooting 8) Platform-specific guides. 3 of 6 tasks now complete (50%).\")",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"PROGRESS UPDATE: Task 2 (Production Environment Configuration) COMPLETED. Created: 1) .env.production template with comprehensive production settings, security checklist, and detailed comments 2) docs/production-configuration.md guide covering security, database, SnapTrade prod setup, monitoring, deployment. 4 of 6 tasks now complete (67%).\")",
      "Bash(cd:*)",
      "Bash(/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/Tmux-Orchestrator/send-claude-message.sh AIMS:0 \"FINAL UPDATE: ALL TASKS COMPLETED! Issue #52 100% done. Delivered: 1) Database init script 2) Setup verification script 3) Local dev setup guide 4) Production env config 5) SnapTrade prod guide 6) Dev startup scripts (.sh). All scripts tested and working. Ready for PR.\")",
      "Bash(kill:*)",
      "Bash(sqlite3:*)",
      "Bash(gh issue create:*)",
      "Bash(touch:*)",
      "Bash(./scripts/start_backend.sh:*)",
      "Bash(env)",
      "Bash(npm init:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(npm test:*)",
      "Bash(./run-connect-test.sh:*)",
      "Bash(./run-connect-test-focused.sh:*)",
      "Bash(npx playwright test:*)",
      "Bash(grep:*)",
      "Bash(gh issue list:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue comment:*)",
      "Bash(git stash:*)"
    ],
    "deny": []
  }
}